Grammar

    0 $accept: program $end

    1 program: extern extern function_def

    2 extern: EXTERN TYPE READ '(' ')' ';'
    3       | EXTERN TYPE PRINT '(' TYPE ')' ';'

    4 function_def: TYPE NAME '(' TYPE NAME ')' block_stmt
    5             | TYPE NAME '(' ')' block_stmt

    6 block_stmt: '{' var_decls stmts '}'
    7           | '{' stmts '}'

    8 var_decls: var_decls decl
    9          | decl

   10 decl: TYPE NAME ';'

   11 stmts: stmts stmt
   12      | stmt

   13 stmt: asgn_stmt
   14     | if_stmt
   15     | if_else_stmt
   16     | while_loop
   17     | block_stmt
   18     | call_stmt
   19     | return_stmt

   20 if_stmt: IF '(' condition ')' stmt

   21 if_else_stmt: IF '(' condition ')' stmt ELSE stmt

   22 while_loop: WHILE '(' condition ')' stmt

   23 call_stmt: PRINT '(' NAME ')' ';'
   24          | READ '(' ')' ';'

   25 return_stmt: RETURN '(' expr ')' ';'
   26            | RETURN term ';'

   27 term: NAME
   28     | NUMBER

   29 asgn_stmt: NAME '=' expr ';'
   30          | NAME '=' term ';'
   31          | NAME '=' READ '(' ')' ';'

   32 expr: term ADD term
   33     | term SUB term
   34     | term MUL term
   35     | term DIV term
   36     | SUB term

   37 condition: term EQ term
   38          | term GT term
   39          | term LT term
   40          | term GEQ term
   41          | term LEQ term


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 2 3 4 5 20 21 22 23 24 25 31
    ')' (41) 2 3 4 5 20 21 22 23 24 25 31
    ';' (59) 2 3 10 23 24 25 26 29 30 31
    '=' (61) 29 30 31
    '{' (123) 6 7
    '}' (125) 6 7
    error (256)
    EXTERN (258) 2 3
    TYPE (259) 2 3 4 5 10
    RETURN (260) 25 26
    IF (261) 20 21
    ELSE (262) 21
    WHILE (263) 22
    ADD (264) 32
    SUB (265) 33 36
    MUL (266) 34
    DIV (267) 35
    EQ (268) 37
    GT (269) 38
    LT (270) 39
    GEQ (271) 40
    LEQ (272) 41
    NUMBER <ival> (273) 28
    NAME <idname> (274) 4 5 10 23 27 29 30 31
    PRINT <idname> (275) 3 23
    READ <idname> (276) 2 24 31
    IFX (277)


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    program <nptr> (30)
        on left: 1
        on right: 0
    extern <nptr> (31)
        on left: 2 3
        on right: 1
    function_def <nptr> (32)
        on left: 4 5
        on right: 1
    block_stmt <nptr> (33)
        on left: 6 7
        on right: 4 5 17
    var_decls <svec_ptr> (34)
        on left: 8 9
        on right: 6 8
    decl <nptr> (35)
        on left: 10
        on right: 8 9
    stmts <svec_ptr> (36)
        on left: 11 12
        on right: 6 7 11
    stmt <nptr> (37)
        on left: 13 14 15 16 17 18 19
        on right: 11 12 20 21 22
    if_stmt <nptr> (38)
        on left: 20
        on right: 14
    if_else_stmt <nptr> (39)
        on left: 21
        on right: 15
    while_loop <nptr> (40)
        on left: 22
        on right: 16
    call_stmt <nptr> (41)
        on left: 23 24
        on right: 18
    return_stmt <nptr> (42)
        on left: 25 26
        on right: 19
    term <nptr> (43)
        on left: 27 28
        on right: 26 30 32 33 34 35 36 37 38 39 40 41
    asgn_stmt <nptr> (44)
        on left: 29 30 31
        on right: 13
    expr <nptr> (45)
        on left: 32 33 34 35 36
        on right: 25 29
    condition <nptr> (46)
        on left: 37 38 39 40 41
        on right: 20 21 22


State 0

    0 $accept: • program $end

    EXTERN  shift, and go to state 1

    program  go to state 2
    extern   go to state 3


State 1

    2 extern: EXTERN • TYPE READ '(' ')' ';'
    3       | EXTERN • TYPE PRINT '(' TYPE ')' ';'

    TYPE  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: extern • extern function_def

    EXTERN  shift, and go to state 1

    extern  go to state 6


State 4

    2 extern: EXTERN TYPE • READ '(' ')' ';'
    3       | EXTERN TYPE • PRINT '(' TYPE ')' ';'

    PRINT  shift, and go to state 7
    READ   shift, and go to state 8


State 5

    0 $accept: program $end •

    $default  accept


State 6

    1 program: extern extern • function_def

    TYPE  shift, and go to state 9

    function_def  go to state 10


State 7

    3 extern: EXTERN TYPE PRINT • '(' TYPE ')' ';'

    '('  shift, and go to state 11


State 8

    2 extern: EXTERN TYPE READ • '(' ')' ';'

    '('  shift, and go to state 12


State 9

    4 function_def: TYPE • NAME '(' TYPE NAME ')' block_stmt
    5             | TYPE • NAME '(' ')' block_stmt

    NAME  shift, and go to state 13


State 10

    1 program: extern extern function_def •

    $default  reduce using rule 1 (program)


State 11

    3 extern: EXTERN TYPE PRINT '(' • TYPE ')' ';'

    TYPE  shift, and go to state 14


State 12

    2 extern: EXTERN TYPE READ '(' • ')' ';'

    ')'  shift, and go to state 15


State 13

    4 function_def: TYPE NAME • '(' TYPE NAME ')' block_stmt
    5             | TYPE NAME • '(' ')' block_stmt

    '('  shift, and go to state 16


State 14

    3 extern: EXTERN TYPE PRINT '(' TYPE • ')' ';'

    ')'  shift, and go to state 17


State 15

    2 extern: EXTERN TYPE READ '(' ')' • ';'

    ';'  shift, and go to state 18


State 16

    4 function_def: TYPE NAME '(' • TYPE NAME ')' block_stmt
    5             | TYPE NAME '(' • ')' block_stmt

    TYPE  shift, and go to state 19
    ')'   shift, and go to state 20


State 17

    3 extern: EXTERN TYPE PRINT '(' TYPE ')' • ';'

    ';'  shift, and go to state 21


State 18

    2 extern: EXTERN TYPE READ '(' ')' ';' •

    $default  reduce using rule 2 (extern)


State 19

    4 function_def: TYPE NAME '(' TYPE • NAME ')' block_stmt

    NAME  shift, and go to state 22


State 20

    5 function_def: TYPE NAME '(' ')' • block_stmt

    '{'  shift, and go to state 23

    block_stmt  go to state 24


State 21

    3 extern: EXTERN TYPE PRINT '(' TYPE ')' ';' •

    $default  reduce using rule 3 (extern)


State 22

    4 function_def: TYPE NAME '(' TYPE NAME • ')' block_stmt

    ')'  shift, and go to state 25


State 23

    6 block_stmt: '{' • var_decls stmts '}'
    7           | '{' • stmts '}'

    TYPE    shift, and go to state 26
    RETURN  shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    '{'     shift, and go to state 23

    block_stmt    go to state 33
    var_decls     go to state 34
    decl          go to state 35
    stmts         go to state 36
    stmt          go to state 37
    if_stmt       go to state 38
    if_else_stmt  go to state 39
    while_loop    go to state 40
    call_stmt     go to state 41
    return_stmt   go to state 42
    asgn_stmt     go to state 43


State 24

    5 function_def: TYPE NAME '(' ')' block_stmt •

    $default  reduce using rule 5 (function_def)


State 25

    4 function_def: TYPE NAME '(' TYPE NAME ')' • block_stmt

    '{'  shift, and go to state 23

    block_stmt  go to state 44


State 26

   10 decl: TYPE • NAME ';'

    NAME  shift, and go to state 45


State 27

   25 return_stmt: RETURN • '(' expr ')' ';'
   26            | RETURN • term ';'

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47
    '('     shift, and go to state 48

    term  go to state 49


State 28

   20 if_stmt: IF • '(' condition ')' stmt
   21 if_else_stmt: IF • '(' condition ')' stmt ELSE stmt

    '('  shift, and go to state 50


State 29

   22 while_loop: WHILE • '(' condition ')' stmt

    '('  shift, and go to state 51


State 30

   29 asgn_stmt: NAME • '=' expr ';'
   30          | NAME • '=' term ';'
   31          | NAME • '=' READ '(' ')' ';'

    '='  shift, and go to state 52


State 31

   23 call_stmt: PRINT • '(' NAME ')' ';'

    '('  shift, and go to state 53


State 32

   24 call_stmt: READ • '(' ')' ';'

    '('  shift, and go to state 54


State 33

   17 stmt: block_stmt •

    $default  reduce using rule 17 (stmt)


State 34

    6 block_stmt: '{' var_decls • stmts '}'
    8 var_decls: var_decls • decl

    TYPE    shift, and go to state 26
    RETURN  shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    '{'     shift, and go to state 23

    block_stmt    go to state 33
    decl          go to state 55
    stmts         go to state 56
    stmt          go to state 37
    if_stmt       go to state 38
    if_else_stmt  go to state 39
    while_loop    go to state 40
    call_stmt     go to state 41
    return_stmt   go to state 42
    asgn_stmt     go to state 43


State 35

    9 var_decls: decl •

    $default  reduce using rule 9 (var_decls)


State 36

    7 block_stmt: '{' stmts • '}'
   11 stmts: stmts • stmt

    RETURN  shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    '{'     shift, and go to state 23
    '}'     shift, and go to state 57

    block_stmt    go to state 33
    stmt          go to state 58
    if_stmt       go to state 38
    if_else_stmt  go to state 39
    while_loop    go to state 40
    call_stmt     go to state 41
    return_stmt   go to state 42
    asgn_stmt     go to state 43


State 37

   12 stmts: stmt •

    $default  reduce using rule 12 (stmts)


State 38

   14 stmt: if_stmt •

    $default  reduce using rule 14 (stmt)


State 39

   15 stmt: if_else_stmt •

    $default  reduce using rule 15 (stmt)


State 40

   16 stmt: while_loop •

    $default  reduce using rule 16 (stmt)


State 41

   18 stmt: call_stmt •

    $default  reduce using rule 18 (stmt)


State 42

   19 stmt: return_stmt •

    $default  reduce using rule 19 (stmt)


State 43

   13 stmt: asgn_stmt •

    $default  reduce using rule 13 (stmt)


State 44

    4 function_def: TYPE NAME '(' TYPE NAME ')' block_stmt •

    $default  reduce using rule 4 (function_def)


State 45

   10 decl: TYPE NAME • ';'

    ';'  shift, and go to state 59


State 46

   28 term: NUMBER •

    $default  reduce using rule 28 (term)


State 47

   27 term: NAME •

    $default  reduce using rule 27 (term)


State 48

   25 return_stmt: RETURN '(' • expr ')' ';'

    SUB     shift, and go to state 60
    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 61
    expr  go to state 62


State 49

   26 return_stmt: RETURN term • ';'

    ';'  shift, and go to state 63


State 50

   20 if_stmt: IF '(' • condition ')' stmt
   21 if_else_stmt: IF '(' • condition ')' stmt ELSE stmt

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term       go to state 64
    condition  go to state 65


State 51

   22 while_loop: WHILE '(' • condition ')' stmt

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term       go to state 64
    condition  go to state 66


State 52

   29 asgn_stmt: NAME '=' • expr ';'
   30          | NAME '=' • term ';'
   31          | NAME '=' • READ '(' ')' ';'

    SUB     shift, and go to state 60
    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47
    READ    shift, and go to state 67

    term  go to state 68
    expr  go to state 69


State 53

   23 call_stmt: PRINT '(' • NAME ')' ';'

    NAME  shift, and go to state 70


State 54

   24 call_stmt: READ '(' • ')' ';'

    ')'  shift, and go to state 71


State 55

    8 var_decls: var_decls decl •

    $default  reduce using rule 8 (var_decls)


State 56

    6 block_stmt: '{' var_decls stmts • '}'
   11 stmts: stmts • stmt

    RETURN  shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    '{'     shift, and go to state 23
    '}'     shift, and go to state 72

    block_stmt    go to state 33
    stmt          go to state 58
    if_stmt       go to state 38
    if_else_stmt  go to state 39
    while_loop    go to state 40
    call_stmt     go to state 41
    return_stmt   go to state 42
    asgn_stmt     go to state 43


State 57

    7 block_stmt: '{' stmts '}' •

    $default  reduce using rule 7 (block_stmt)


State 58

   11 stmts: stmts stmt •

    $default  reduce using rule 11 (stmts)


State 59

   10 decl: TYPE NAME ';' •

    $default  reduce using rule 10 (decl)


State 60

   36 expr: SUB • term

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 73


State 61

   32 expr: term • ADD term
   33     | term • SUB term
   34     | term • MUL term
   35     | term • DIV term

    ADD  shift, and go to state 74
    SUB  shift, and go to state 75
    MUL  shift, and go to state 76
    DIV  shift, and go to state 77


State 62

   25 return_stmt: RETURN '(' expr • ')' ';'

    ')'  shift, and go to state 78


State 63

   26 return_stmt: RETURN term ';' •

    $default  reduce using rule 26 (return_stmt)


State 64

   37 condition: term • EQ term
   38          | term • GT term
   39          | term • LT term
   40          | term • GEQ term
   41          | term • LEQ term

    EQ   shift, and go to state 79
    GT   shift, and go to state 80
    LT   shift, and go to state 81
    GEQ  shift, and go to state 82
    LEQ  shift, and go to state 83


State 65

   20 if_stmt: IF '(' condition • ')' stmt
   21 if_else_stmt: IF '(' condition • ')' stmt ELSE stmt

    ')'  shift, and go to state 84


State 66

   22 while_loop: WHILE '(' condition • ')' stmt

    ')'  shift, and go to state 85


State 67

   31 asgn_stmt: NAME '=' READ • '(' ')' ';'

    '('  shift, and go to state 86


State 68

   30 asgn_stmt: NAME '=' term • ';'
   32 expr: term • ADD term
   33     | term • SUB term
   34     | term • MUL term
   35     | term • DIV term

    ADD  shift, and go to state 74
    SUB  shift, and go to state 75
    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    ';'  shift, and go to state 87


State 69

   29 asgn_stmt: NAME '=' expr • ';'

    ';'  shift, and go to state 88


State 70

   23 call_stmt: PRINT '(' NAME • ')' ';'

    ')'  shift, and go to state 89


State 71

   24 call_stmt: READ '(' ')' • ';'

    ';'  shift, and go to state 90


State 72

    6 block_stmt: '{' var_decls stmts '}' •

    $default  reduce using rule 6 (block_stmt)


State 73

   36 expr: SUB term •

    $default  reduce using rule 36 (expr)


State 74

   32 expr: term ADD • term

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 91


State 75

   33 expr: term SUB • term

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 92


State 76

   34 expr: term MUL • term

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 93


State 77

   35 expr: term DIV • term

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 94


State 78

   25 return_stmt: RETURN '(' expr ')' • ';'

    ';'  shift, and go to state 95


State 79

   37 condition: term EQ • term

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 96


State 80

   38 condition: term GT • term

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 97


State 81

   39 condition: term LT • term

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 98


State 82

   40 condition: term GEQ • term

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 99


State 83

   41 condition: term LEQ • term

    NUMBER  shift, and go to state 46
    NAME    shift, and go to state 47

    term  go to state 100


State 84

   20 if_stmt: IF '(' condition ')' • stmt
   21 if_else_stmt: IF '(' condition ')' • stmt ELSE stmt

    RETURN  shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    '{'     shift, and go to state 23

    block_stmt    go to state 33
    stmt          go to state 101
    if_stmt       go to state 38
    if_else_stmt  go to state 39
    while_loop    go to state 40
    call_stmt     go to state 41
    return_stmt   go to state 42
    asgn_stmt     go to state 43


State 85

   22 while_loop: WHILE '(' condition ')' • stmt

    RETURN  shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    '{'     shift, and go to state 23

    block_stmt    go to state 33
    stmt          go to state 102
    if_stmt       go to state 38
    if_else_stmt  go to state 39
    while_loop    go to state 40
    call_stmt     go to state 41
    return_stmt   go to state 42
    asgn_stmt     go to state 43


State 86

   31 asgn_stmt: NAME '=' READ '(' • ')' ';'

    ')'  shift, and go to state 103


State 87

   30 asgn_stmt: NAME '=' term ';' •

    $default  reduce using rule 30 (asgn_stmt)


State 88

   29 asgn_stmt: NAME '=' expr ';' •

    $default  reduce using rule 29 (asgn_stmt)


State 89

   23 call_stmt: PRINT '(' NAME ')' • ';'

    ';'  shift, and go to state 104


State 90

   24 call_stmt: READ '(' ')' ';' •

    $default  reduce using rule 24 (call_stmt)


State 91

   32 expr: term ADD term •

    $default  reduce using rule 32 (expr)


State 92

   33 expr: term SUB term •

    $default  reduce using rule 33 (expr)


State 93

   34 expr: term MUL term •

    $default  reduce using rule 34 (expr)


State 94

   35 expr: term DIV term •

    $default  reduce using rule 35 (expr)


State 95

   25 return_stmt: RETURN '(' expr ')' ';' •

    $default  reduce using rule 25 (return_stmt)


State 96

   37 condition: term EQ term •

    $default  reduce using rule 37 (condition)


State 97

   38 condition: term GT term •

    $default  reduce using rule 38 (condition)


State 98

   39 condition: term LT term •

    $default  reduce using rule 39 (condition)


State 99

   40 condition: term GEQ term •

    $default  reduce using rule 40 (condition)


State 100

   41 condition: term LEQ term •

    $default  reduce using rule 41 (condition)


State 101

   20 if_stmt: IF '(' condition ')' stmt •
   21 if_else_stmt: IF '(' condition ')' stmt • ELSE stmt

    ELSE  shift, and go to state 105

    $default  reduce using rule 20 (if_stmt)


State 102

   22 while_loop: WHILE '(' condition ')' stmt •

    $default  reduce using rule 22 (while_loop)


State 103

   31 asgn_stmt: NAME '=' READ '(' ')' • ';'

    ';'  shift, and go to state 106


State 104

   23 call_stmt: PRINT '(' NAME ')' ';' •

    $default  reduce using rule 23 (call_stmt)


State 105

   21 if_else_stmt: IF '(' condition ')' stmt ELSE • stmt

    RETURN  shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    NAME    shift, and go to state 30
    PRINT   shift, and go to state 31
    READ    shift, and go to state 32
    '{'     shift, and go to state 23

    block_stmt    go to state 33
    stmt          go to state 107
    if_stmt       go to state 38
    if_else_stmt  go to state 39
    while_loop    go to state 40
    call_stmt     go to state 41
    return_stmt   go to state 42
    asgn_stmt     go to state 43


State 106

   31 asgn_stmt: NAME '=' READ '(' ')' ';' •

    $default  reduce using rule 31 (asgn_stmt)


State 107

   21 if_else_stmt: IF '(' condition ')' stmt ELSE stmt •

    $default  reduce using rule 21 (if_else_stmt)
